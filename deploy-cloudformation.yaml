AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 Instance for JSON File Server with Node 18 and Nginx

Parameters:
  EIPAllocationId:
    Description: Allocation Id of the Elastic IP to associate with the instance
    Type: String
  DDAPIKey:
    Description: Datadog API key
    Type: String

Resources:
  JFSInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref JFSSecurityGroup
      ImageId: ami-04e35eeae7a7c5883
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          DD_API_KEY=${DDAPIKey} \
            DD_SITE="datadoghq.com" \
            DD_APM_INSTRUMENTATION_ENABLED=host \
            DD_LOGS_ENABLED=true \
            DD_PROCESS_AGENT_ENABLED=true \
            bash -c "$(curl -L https://s3.amazonaws.com/dd-agent/scripts/install_script_agent7.sh)"
          yum update -y
          yum install -y nginx git
          curl -sL https://rpm.nodesource.com/setup_18.x | sudo bash -
          yum install -y nodejs
          mkdir -p /var/www/
          git clone https://github.com/asciimo/json-file-server.git /var/www/app
          git -C /var/www/app checkout collection-endpoint
          chown -R ec2-user:ec2-user /var/www/app
          chmod 2775 /var/www
          find /var/www -type d -exec chmod 2775 {} \;
          find /var/www -type f -exec chmod 0664 {} \;
          cd /var/www/app
          export DD_LOGS_INJECTION=true
          export DD_PROFILING_ENABLED=true
          export DD_ENV=development
          export DD_SERVICE=mock-api
          export DD_VERSION=0.1.0
          npm install pm2 -g
          sudo -u ec2-user npm install
          sudo -u ec2-user pm2 start index.js

          # Create an Nginx configuration to serve the Node.js app
          systemctl stop nginx
          echo '
          events {
              worker_connections 1024;
          }
          http {
              server {
                  listen 80;
                  server_name localhost;
                  access_log /var/log/nginx/jfs.log;
                  error_log /var/log/nginx/jfs-error.log warn;
                  location / {
                      proxy_pass http://127.0.0.1:2000;  
                      proxy_http_version 1.1;
                      proxy_set_header Upgrade $http_upgrade;
                      proxy_set_header Connection 'upgrade';
                      proxy_set_header Host $host;
                      proxy_cache_bypass $http_upgrade;
                  }
              }
          }
          ' > /etc/nginx/nginx.conf

          # Reload Nginx to apply the new configuration
          systemctl start nginx

  JFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref JFSInstance
      AllocationId: !Ref EIPAllocationId

Outputs:
  InstanceId:
    Description: ID of the EC2 instance
    Value: !Ref JFSInstance
